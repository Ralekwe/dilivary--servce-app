@using System.Collections.Generic;
@using DeliveryService.Core.Resolvers;
@using Cims.WorkflowLib.Extensions;
@using Cims.WorkflowLib.Models.Business;
@using Cims.WorkflowLib.Models.Business.Products;
@model DeliveryService.Models.Orders.PlaceOrderModel;
@{
    ViewData["Title"] = "Make order";
}

@{
    IEnumerable<Product> menuItems = new List<Product>();
    IEnumerable<ProductCategory> categories = new List<ProductCategory>();
    try
    {
        menuItems = new MenuResolver().GetMenu();
        categories = menuItems.Select(x => x.ProductCategory).Distinct();
    }
    catch (System.Exception ex)
    {
        ViewData["placing_order"] = "ERROR: " + ex.Message;
    }
}

<div class="text-center">
    <h1 class="display-4">Make order</h1>
</div>

<label id="lblPlacingOrder">
    @if (ViewData["placing_order"] != null)
    {
        @ViewData["placing_order"]
    }
</label>


<div>
    <div class="form-group row">
        <label for="staticPhoneNumber" class="col-sm-2 col-form-label">Phone number</label>
        <div class="col-sm-10">
            <input type="text" readonly class="form-control-plaintext" id="staticPhoneNumber" value=@ViewData["phone_number"] asp-for="PhoneNumber">
        </div>
    </div>
    <div class="form-group row" style="margin-top: 5px;">
        <label for="selectDeliveryMethod" class="col-sm-2 col-form-label">Delivery method</label>
        <div class="col-sm-10">
            <select class="form-control" id="selectDeliveryMethod" aria-describedby="selectDeliveryMethodHelp" style="width:200px;">
                <option selected>@EnumExtensions.GetDisplayName(DeliveryMethodType.OnFoot)</option>
                <option>@EnumExtensions.GetDisplayName(DeliveryMethodType.ElectricScooter)</option>
                <option>@EnumExtensions.GetDisplayName(DeliveryMethodType.Car)</option>
            </select>
            <small id="selectDeliveryMethodHelp" class="form-text text-muted">Delivery price could depend on the delivery method.</small>
        </div>
    </div>
    <div class="form-group row" style="margin-top: 5px;">
        <label for="selectCity" class="col-sm-2 col-form-label">City</label>
        <div class="col-sm-10">
            <select class="form-control" id="selectCity" style="width:400px;">
                <option selected>City 1, Country 1</option>
                <option>City 2, Country 1</option>
                <option>City 1, Country 2</option>
                <option>City 2, Country 2</option>
                <option>City 1, Country 3</option>
                <option>City 2, Country 3</option>
            </select>
        </div>
    </div>
    <div class="form-group row" style="margin-top: 5px;">
        <label for="inputAddress" class="col-sm-2 col-form-label">Address</label>
        <div class="col-sm-10">
            <input type="text" class="form-control" id="inputAddress" placeholder="Address" asp-for="Address">
        </div>
    </div>
    <div class="form-group row" style="margin-top: 5px;">
        <label for="selectTypeOfPayment" class="col-sm-2 col-form-label">Type of payment</label>
        <div class="col-sm-10">
            <select class="form-control" id="selectTypeOfPayment" style="width:400px;">
                <option selected>Cash upon receipt</option>
                <option>Card upon receipt</option>
                <option>Bank's app using a QR code</option>
                <option>CVC</option>
            </select>
        </div>
    </div>
    <div class="form-group row" style="margin-top: 5px;">
        <label class="col-sm-2 col-form-label">Additional</label>
        <div class="col-sm-10">
            <input type="checkbox" class="form-check-input" id="checkGetFromWH">
            <label class="form-check-label" for="checkGetFromWH">Get from the warehouse</label>
        </div>
    </div>
    <div class="form-group row" style="margin-top: 5px;">
        <label class="col-sm-2 col-form-label">Price</label>
        <div class="col-sm-10">
            <div>
                <label class="col-sm-2 col-form-label">Delivery:</label>
                <label id="labelPriceDelivery">0</label>
                <label>USD</label>
            </div>
            <div>
                <label class="col-sm-2 col-form-label">Products:</label>
                <label id="labelPriceProducts">0</label>
                <label>USD</label>
            </div>
            <div>
                <label class="col-sm-2 col-form-label">Total:</label>
                <label id="labelPriceTotal">0</label>
                <label>USD</label>
            </div>
        </div>
    </div>
    <button id="btnPlaceOrder" name="btnPlaceOrder" class="btn btn-primary" style="margin-top: 5px; width: 200px;">Place order</button>
</div>

<div class="text-center">
    <h4 class="display-4">Menu</h4>
    @if (categories.Any())
    {
        @foreach (var category in categories)
        {
            <div class="card mb-3">
                <img class="card-img-top" src=@category.PictureUrl alt=@category.PictureDescription height="700px">
                <div class="card-body">
                    <h5 class="card-title">@category.Name</h5>
                    <p class="card-text">@category.Description</p>
                    <table class="table table-striped table-hover table-bordered" style="table-layout: fixed; width: 100%;">
                        <thead class="thead-dark">
                            <tr>
                                <th scope="col">Name</th>
                                <th scope="col">Price, USD</th>
                                <th scope="col">Quantity</th>
                            </tr>
                        </thead>
                        <tbody>
                        @foreach (var menuItem in category.Products)
                        {
                            var tdPriceId = "tdPrice" + menuItem.Id.ToString();
                            var lblProductQtyId = "lblProductQty" + menuItem.Id.ToString();
                            <tr>
                                <td>@menuItem.Name</td>
                                <td id="@tdPriceId">@menuItem.Price</td>
                                <td>
                                    <button type="button" class="btn btn-primary" onclick="DecreaseProductQty(@menuItem.Id)">-</button>
                                    <button type="button" class="btn btn-primary" onclick="IncreaseProductQty(@menuItem.Id)">+</button>
                                    <label id="@lblProductQtyId">0</label>
                                </td>
                            </tr>
                        }
                        </tbody>
                    </table>
                </div>
            </div>
        }
    }
    else
    {
        <label>No products available in the menu.</label>
    }
</div>

@section Scripts
{
    <script type="text/javascript">
        var url = "@Url.Action("MakeOrder", "Home")";
        var productIdList = [];

        $(document).ready(function() {
            $("#btnPlaceOrder").click(function() {
                if (productIdList.length === 0) {
                    return;
                }
                const selectCity = document.getElementById("selectCity");
                var object = {
                    PhoneNumber: String(document.getElementById("staticPhoneNumber").innerHTML),
                    City: String(selectCity.options[selectCity.selectedIndex].text),
                    Address: String(document.getElementById("inputAddress").innerHTML),
                    ProductIds: productIdList
                };
                $.ajax({
                    type: "POST",
                    url: url,
                    data: object,

                    success: function(msg) {
                        var parsedMsg = JSON.stringify(msg.message).replace(/\"/g, "");
                        document.getElementById("lblPlacingOrder").innerHTML = parsedMsg;
                        alert(parsedMsg);
                    },
                    error: function(jqXHR, exception) {
                        var msg = '';
                        if (jqXHR.status === 0) {
                            msg = 'Not connect. Verify Network.';
                        } else if (jqXHR.status == 404) {
                            msg = 'Requested page not found. [404]';
                        } else if (jqXHR.status == 500) {
                            msg = 'Internal Server Error [500].';
                        } else if (exception === 'parsererror') {
                            msg = 'Requested JSON parse failed.';
                        } else if (exception === 'timeout') {
                            msg = 'Time out error.';
                        } else if (exception === 'abort') {
                            msg = 'Ajax request aborted.';
                        } else {
                            msg = 'Uncaught Error.' + jqXHR.responseText;
                        }
                        var parsedMsg = JSON.stringify(msg.message).replace(/\"/g, "");
                        document.getElementById("lblPlacingOrder").innerHTML = parsedMsg;
                        alert(parsedMsg);
                    }
                });
            });
        });

        function IncreaseProductQty(productId)
        {
            // Quantity
            var lblProductQty = document.getElementById("lblProductQty" + productId);
            lblProductQty.innerHTML = (parseInt(lblProductQty.innerHTML) + 1);
            // Price
            var labelPriceProducts = document.getElementById("labelPriceProducts");
            var labelPriceTotal = document.getElementById("labelPriceTotal");
            labelPriceProducts.innerHTML = parseFloat(labelPriceProducts.innerHTML) + parseFloat(document.getElementById("tdPrice" + productId).innerHTML);
            labelPriceTotal.innerHTML = parseFloat(labelPriceTotal.innerHTML) + parseFloat(document.getElementById("tdPrice" + productId).innerHTML);
            // Product ID
            productIdList.push(productId);
        }

        function DecreaseProductQty(productId)
        {
            // Quantity
            var lblProductQty = document.getElementById("lblProductQty" + productId);
            var qty = parseInt(lblProductQty.innerHTML);
            if (qty === 0)
            {
                return;
            }
            lblProductQty.innerHTML = qty - 1;
            // Price
            var labelPriceProducts = document.getElementById("labelPriceProducts");
            var labelPriceTotal = document.getElementById("labelPriceTotal");
            labelPriceProducts.innerHTML = parseFloat(labelPriceProducts.innerHTML) - parseFloat(document.getElementById("tdPrice" + productId).innerHTML);
            labelPriceTotal.innerHTML = parseFloat(labelPriceTotal.innerHTML) - parseFloat(document.getElementById("tdPrice" + productId).innerHTML);
            // Product ID
            const index = productIdList.indexOf(productId);
            if (index > -1) { // only splice array when item is found
                productIdList.splice(index, 1); // 2nd parameter means remove one item only
            }
        }
    </script>
}
